package com.shalako.checkers.model;

import com.shalako.checkers.enums.BoardSize;

/**
 * Represents a position on the checkers board.
 */
public record Position(int row, int column) {

  /**
   * Creates a new position by adding the specified offsets to this position.
   */
  public Position offset(int rowOffset, int columnOffset) {
    return new Position(row + rowOffset, column + columnOffset);
  }

  /**
   * Checks if this position is within the bounds of the specified board size.
   */
  public boolean isValidForBoard(BoardSize boardSize) {
    return row >= 0 && row < boardSize.getRows() &&
        column >= 0 && column < boardSize.getColumns();
  }

  /**
   * Returns the position halfway between this position and the target position. Used for determining the position of a captured piece during a jump.
   */
  public Position midPointTo(Position target) {
    return new Position((row + target.row) / 2, (column + target.column) / 2);
  }

  // equals, hashCode, and toString are generated by Lombok @Value
}
